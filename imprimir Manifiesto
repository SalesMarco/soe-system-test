import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileElement;

public class ImprimirManifiestoController {
	
	private static ImprimirManifiestoController instance = null;
	public WebElement checkBoxManifiesto = null;
	public WebElement checkBoxUltimasGuias = null;
	public WebElement aceptarBoton = null;
	public WebElement cancelarBoton = null;
	
	public static AppiumDriver<MobileElement> driver = null;
	
	private ImprimirManifiestoController() {
		
	}
	
	public static ImprimirManifiestoController getInstance(AppiumDriver<MobileElement> controlador) {
		driver = controlador; 
		if(instance == null) {
			try {
				WebDriverWait wait = new WebDriverWait(driver,10);
				wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//android.view.View[@content-desc=\"Imprimir manifiesto\"]")));
				instance = new ImprimirManifiestoController();
			}catch(TimeoutException ex) {
				System.out.println("La pantalla de Firma no se carg√≥");
				return instance;
			}
		}
		return instance;
	}
	
	public void init(String idCheckBoxManifiesto, String idCheckBoxGuias, String idAceptarBoton, String idCancelarBoton) {
		checkBoxManifiesto = initElement(idCheckBoxManifiesto);
		checkBoxUltimasGuias = initElement(idCheckBoxGuias);
		aceptarBoton = initElement(idAceptarBoton);
		cancelarBoton = initElement(idCancelarBoton);
	}
	
	public void reset() {
		instance = null;
		driver = null;
		checkBoxManifiesto = null;
		checkBoxUltimasGuias = null;
		aceptarBoton = null;
		cancelarBoton = null;
	}
	
	public WebElement initElement(String idElement) {
		if(idElement.startsWith("//android"))
			return initElementPorXpath(idElement);
		else
			return initElementPorId(idElement);
	}
	
	private WebElement initElementPorXpath(String xpath) {
		WebElement element = null;
		try {
			element = (new WebDriverWait(driver,30)).until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpath)));
		}catch(TimeoutException ex) {
			System.out.println("No se pudo inicializar elemento con xpath en la pantalla de Comentario: " + xpath);
		}
		
		return element;
	}
	
	private WebElement initElementPorId(String id) {
		WebElement element = null;
		try {
			element = (new WebDriverWait(driver,30)).until(ExpectedConditions.visibilityOfElementLocated(By.id(id)));
		}catch(TimeoutException ex) {
			System.out.println("No se pudo inicializar elemento con id en la pantalla de Comentario: " + id);
		}
		return element;
	}
	

}
